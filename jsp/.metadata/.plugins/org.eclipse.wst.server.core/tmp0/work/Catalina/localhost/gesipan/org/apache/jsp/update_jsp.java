/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.40
 * Generated at: 2020-12-01 07:13:21 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;

public final class update_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	// DB 연결
	Class.forName("com.mysql.jdbc.Driver");
	String db="jdbc:mysql://localhost:3306/pkc";
	String userid="root";
	String pw="1234";
	Connection conn=DriverManager.getConnection(db,userid,pw); // db정보,아이디,비번
	
	
	// request값 가져오기
	String id=request.getParameter("id");
	// 쿼리 생성
	String sql="select * from gesipan where id="+id;
	//심부름꾼 생성
	Statement stmt = conn.createStatement();
	stmt.executeQuery(sql);
	// 쿼리 실행 => ResultSet
	ResultSet rs=stmt.executeQuery(sql);
	rs.next();
	// 하나의 레코드를 읽어와서 폼태그에 전달

	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t// 성별, 취미, 태어난 해를 적용하여 처음 선택했던 값으로 표현되게\r\n");
      out.write("\tfunction init()\r\n");
      out.write("\t{\r\n");
      out.write("\t\t// 성별 : 0\r\n");
      out.write("\t\tdocument.pkc.sung[");
      out.print(rs.getInt("sung"));
      out.write("].checked=true\r\n");
      out.write("\t\t// 취미 : 0,1,3,5  //var=전역변수와 비슷하다고 보면됨\r\n");
      out.write("\t\tvar hob=\"");
      out.print(rs.getString("hobby"));
      out.write("\";\r\n");
      out.write("\t\tvar hobby=hob.split(\",\");\r\n");
      out.write("\t\tfor(i=0;i<hobby.length;i++)\r\n");
      out.write("\t\t{\r\n");
      out.write("\t\t\tdocument.pkc.hobby[hobby[i]].checked=true;\r\n");
      out.write("//\t\t\tdocument.pkc.hobby[hobby[0]].checked=true;\r\n");
      out.write("//\t\t\tdocument.pkc.hobby[hobby[1]].checked=true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t// 태어난 해\r\n");
      out.write("\t\t\tdocument.pkc.birth.value=");
      out.print(rs.getString("birth"));
      out.write(";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"init()\"> <!-- 실행할 function -->\r\n");
      out.write("<form name=\"pkc\" method=\"post\" action=\"update_ok.jsp\">\r\n");
      out.write("\t<input type=\"hidden\" name=\"id\" value=\"");
      out.print(id);
      out.write("\">\r\n");
      out.write("\t<table width=\"600\" align=\"center\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td> 제 목 </td>\r\n");
      out.write("\t\t\t<td> <input type=\"text\" name=\"title\" size=\"40\" value=\"");
      out.print(rs.getString("title") );
      out.write("\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td> 이 름 </td>\r\n");
      out.write("\t\t\t<td> <input type=\"text\" name=\"name\" value=\"");
      out.print(rs.getString("name") );
      out.write("\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td> 비밀번호 </td>\r\n");
      out.write("\t\t\t<td> <input type=\"password\" name=\"pwd\" ></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td> 내 용 </td>\r\n");
      out.write("\t\t\t<td> <textarea cols=\"40\" rows=\"5\" name=\"content\"> ");
      out.print(rs.getString("content"));
      out.write("</textarea></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td> 성 별 </td>\r\n");
      out.write("\t\t\t<td> <input type=\"radio\" name=\"sung\" value=\"0\">남자\r\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"sung\" value=\"1\">여자\r\n");
      out.write("\t\t\t\t<input type=\"radio\" name=\"sung\" value=\"2\">선택안함\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td> 취 미 </td>\r\n");
      out.write("\t\t\t<td> <input type=\"checkbox\" name=\"hobby\" value=\"0\">낚시\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" name=\"hobby\" value=\"1\">독서\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" name=\"hobby\" value=\"2\">여행\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" name=\"hobby\" value=\"3\">음주\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" name=\"hobby\" value=\"4\">잠자기\r\n");
      out.write("\t\t\t\t<input type=\"checkbox\" name=\"hobby\" value=\"5\">게임\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td> 출생연도 </td>\r\n");
      out.write("\t\t\t<td> <select name=\"birth\">\r\n");
      out.write("\t\t\t\t");

					for(int i=2020;i>=1900;i--)
					{
				
      out.write("\r\n");
      out.write("\t\t\t\t<option value=\"");
      out.print(i);
      out.write('"');
      out.write('>');
      out.write(' ');
      out.print(i );
      out.write(" </option>\r\n");
      out.write("\t\t\t\t");

				}
				
      out.write("\r\n");
      out.write("\t\t\t</td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<td colspan=\"2\" align=\"center\">\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"수정하기\"></td>\r\n");
      out.write("\t\t</tr>\r\n");
      out.write("\t</table>\r\n");
      out.write("</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
